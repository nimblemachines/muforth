( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2018 David Frech. (Read the LICENSE for details.)


loading Horizontal scan bitmap compiler


( For video raster generation - ie, console fonts - and for spelling in
  falling water, we need to scan the character images horizontally. It's
  easy to do this. We assume here that our characters are no more than 8
  bits wide, and - mostly for compatibility with "raw" font files - at most
  16 pixels high.)

16 constant max-height

9 constant height  ( XXX really, "caller" should set this)

: .   ( bits - bits')    2* ;               ( unset pixel)
: X   ( bits - bits')    .  1+ ;            ( set pixel)
: |   ( a bits - a+1 0)  over c!  1+  0 ;   ( end raster line)
: |;  ( start a bits)                       ( end character)
      |  drop  swap -  height = if ^ then
      error" character has wrong height" ;

( here, in order to check if the char has the right height we need to know
  the starting a. |; could check that a - a_init = height)

( How many alternate shapes?)
4 constant #alts

max-height #alts *  constant b/char

( Assuming 128 chars, less controls and space)
128 33 - b/char *  buffer bitmaps

: bitmap  ( alt# - a a bits)
   max-height * ( alt offset)
   \f char  33 - ( skip controls & space)  b/char *  bitmaps +  ( char origin)
   + ( alt offset)  dup  0 ( bits) ;

: letter   ( - a a bits)  0 bitmap ;
: alt1     ( - a a bits)  1 bitmap ;
: alt2     ( - a a bits)  2 bitmap ;
: alt3     ( - a a bits)  3 bitmap ;
: rounder  ( - a a bits)  alt1 ;  ( rounder versions are simply alt 1)

( XXX currently no way to mark descenders, and no way to create "icons"
  that are a different shape than the standard character box.)

