( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2019 David Frech. (Read the LICENSE for details.)


loading Vertical scan bitmap compiler


( For POV - persistence of vision - applications, in which we "draw" with a
  vertical row of LEDs, and for driving "pin-head" impact printers -
  remember those? - we need to scan the bitmap vertically. But for the
  author's ease we'd like to be able to _write_ it horizontally. Converting
  between the two is the job of this code.)

( We allocate a cell for each column of pixels. This is probably overkill,
  but it's also really easy, and doesn't use that much memory.)

5 cells constant width  ( XXX really, "caller" should set this)
9 constant height  ( XXX really, "caller" should set this)

: or!  ( mask a)  tuck  @ or  swap ! ;

: .   ( mask a - mask a')   cell+ ;            ( unset pixel)
: X   ( mask a - mask a')   2dup or!  . ;      ( set pixel)

: |   ( start mask a - start mask' start)      ( end raster line)
      drop  2*  over ;  

: |;  ( start mask a)                          ( end character)
      swap  1  height 1- <<  =  if  2drop ^  then
      error" character has wrong height" ;

( How many alternate shapes?)
4 constant #alts

width #alts *  constant b/char

( Assuming 128 chars, less controls and space)
128 33 - b/char *  buffer bitmaps

: bitmap  ( alt# - a mask a)
   width * ( alt offset)
   \f char  33 - ( skip controls & space)  b/char *  bitmaps + ( char origin)
   + ( alt offset)  dup  1 ( mask)  swap ;

: letter   ( - a mask a)  0 bitmap ;
: alt1     ( - a mask a)  1 bitmap ;
: alt2     ( - a mask a)  2 bitmap ;
: alt3     ( - a mask a)  3 bitmap ;
: rounder  ( - a mask a)  alt1 ;  ( rounder versions are simply alt 1)

( XXX currently no way to mark descenders, and no way to create "icons"
  that are a different shape than the standard character box.)

