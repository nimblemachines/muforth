( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2018 David Frech. (Read the LICENSE for details.)

( Support for creating a histogram of the _static_ usage of Forth words in
  a body of code.

  I created the corpus.mu4 file as follows:
  $ find . -name "*.mu4" -exec echo ld-histo {} \; > lib/corpus.mu4

  Create the histogram using the following command:
  $ ./muforth -f lib/histo.mu4 bye > counts

  To see the counts:
  $ cat counts | sort -nr
)


sealed .counters.  ( word counters)
: counters  .counters. definitions ;

sealed .lex.
: lex  .lex. definitions ;

: show-n-toss  ( delim)
   cr parsed type space  parse type ;

: toke-n-toss
   cr parsed type space  token type ;

compiler
: \lx  .lex. \chain ;

lex
: comment  comment ;  ( XXX no good way to fix this to show tokens as they are getting tossed)
: (   char ) show-n-toss ;  --  \f ( ;
: --  ctrl J show-n-toss ;  --  \f -- ;
: char  toke-n-toss ;
: ctrl  toke-n-toss ;

( Throw away strings, rather than counting the tokens that make them up.)
:  "  char " show-n-toss ;  -- 2drop ;
: z"   \lx " ;
: ."   \lx " ;
: error"    \lx " ;
: loading   \lx -- ;

forth

' nope
-:
        .lex. find if  execute ^  then  ( skip comments!)
   .counters. find if  execute  ( self-incrementing!)  ^  then
    (create) 1 ,    ( count this appearance!)
    does>  1 swap +! ;  ( do the increment)
mode __histo

: histo-file  ( z")
   open-file-ro ( fd)  dup on-exit close-file
   state preserve  __histo
   current preserve  counters
   read-file ( a u)  evaluate ;

: ld-histo  token, histo-file ;

( Print count then name - make it easy for unix sort ;-)
: .count  ( 'link)
   dup  cr
   link>  >body @  ( get count)  u.
   link>name  type ;

: .counts   .counters.  ( 'link)
  begin  @  =while  dup .count  repeat  drop ;

ld lib/corpus.mu4
decimal
>stdout  .counts  >stderr
