( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2018 David Frech. (Read the LICENSE for details.)

( Find name clashes between two vocab chains.)

variable against
-: ( 'link - counted? exit?)  ( called for each word in chain, below)
   dup muchain? if  drop  0  -1  ^  then  ( exit if we see a muchain)
   dup  hidden? if  drop  0   0  ^  then  ( skip hidden words)
   link>name ( a u)  against @  find  if
      ( code)  >link  .name-and-count-local  ^  then
   ( a u) 2drop  0  0 ;

( For each word found on chain, try to find it in against; if found, print
  it and count it as a clash.

  Example use: After loading a target compiler, see what names are on both
  the host forth chain and the target assembler chain:

    .assembler. .forth. clashes
)

( NOTE: chain will be enumerated only up to where it joins another chain,
  whereas against will be enumerated - by find - thru any joins all the way
  to the root.

  So if you want to test only the words that exist *in* a chain, but that
  chain is linked to another, then specify it *first*.)

: clashes  ( chain against)
   cr cr  against !  ( chain)  [ #] forall-words
   radix preserve  decimal  cr  ." ("  . ." clashes)" ;
