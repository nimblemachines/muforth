( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2019 David Frech. (Read the LICENSE for details.)

( Find name clashes between two vocab chains.)

variable against
-: ( count 'link - count' exit?)  ( called for each word in chain, below)
   dup  hidden? if  drop   0  ^  then  ( skip hidden words)
   link>name ( a u)  against @  find  if
      ( code)  >link  .name-and-count-it  ^  then
   ( a u) 2drop  0 ;

( For each word found on chain, try to find it in against; if found, print
  it and count it as a clash. When enumerating *both* chain and against,
  search all the way to the root, through any chains that are joined to.

  Example use: After loading a target compiler, see what names are on both
  the host forth chain and the target assembler chain:

    .assembler. .forth. clashes

  Or, perhaps more interesting: What words do something special in the
  meta-compiler?

    .meta. .forth. clashes

  These are arguably the *only* words that need to be in .meta. !!
)

: clashes  ( chain against)
   cr cr  against !  push  0  [ #]  pop ( count 'code 'link)  forall-words
   radix preserve  decimal  cr  ." ("  . ." clashes)" ;
