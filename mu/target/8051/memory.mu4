| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2025 David Frech. (Read the LICENSE for details.)

loading 8051 memory image

decimal

( Define the basics of the target's memory.)
 2 constant bytes/cell
         -d big-endian

ld target/common/memory.mu4   ( generic memory image support)

| Defaults, so we can load this code without defining a specific 8051
| target device.

.ifndef #flash
   64 Ki constant #flash
     256 constant #ram
     256 constant #xram
.then

| Three memory aspaces: flash, ram, xram.
|
| Currently every aspace only has one memory image, and every image only
| has one region. We use the default of "drop" as our choose-image: since
| there is only one image per aspace, choose-image is a no-op.
|
| Even though ram space is limited to 256 bytes - so an 8-bit address
| suffices - and xram space is generally smaller than 64 Ki, I'm going to
| leave these at 16 bits because visually that suggests "this is an
| address".

16 make-aspace  #flash make-image  make-region flash
16 make-aspace  #ram   make-image  make-region ram
16 make-aspace  #xram  make-image  make-region xram

: wipe
     ram  "20 region!    0 fill-image  ( skip the banked registers)
    xram    0 region!    0 fill-image
   flash    0 region!  "ff fill-image ;

wipe  ( leaves flash as current region)
