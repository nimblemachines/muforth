( serial2  --  hardware serial stuff )
( daf  3 dec 92	created )
( daf  28 feb 93  FIXED the darn bug that cause this not to work )
(         unless it was loaded from source FIRST: and that is, )
(         that -base will calc the base at *compile* time and )
(         will probably be different from a later *run* time. )
( daf  20-aug-93  TOTAL changes again.  Serial chip addresses )
(    are ;CODE words for speed; everything is cleaner; we don't )
(    check ?quit every time around for reading, instead every )
(    256 or so )
( daf 17-sep-93  no more {serial} or {chat} )

only forth definitions

: ?quit  ?terminal if quit endif ;

decimal
( hacks to the compiler )
: ;code  compile (;code) smudge  [compile] [ ;  immediate
: code   create -8 allot here 4+ , ;
: octal  8 base ! ;

octal
: next,
  026034 w,		( movl a4@+,d6 -- start of NEXT )
  027063 w, 064000 w,  ( movl a3@0+d6:l,d7 )
  047363 w, 074000 w,  ( jmp  a3@0+d7:l ) ;

( port numbers )
0 constant printer
2 constant modem

var port

: Data?  const ;code ( -- f ) octal
  020170 w, hex 1dc w, octal ( movl SCCWr,a0 )
  031072 w, ' port 2+ here - w, ( movw pc@port,d1 )
  010663 w, 064007 w, 010000 w,
    ( movb a3@7+d6:l,a0@0+d1:w -- reg# to ctl )
  070001 w,                  ( moveq #1,d0 )
  020170 w, hex 1d8 w, octal ( movl SCCRd,a0 )
  140060 w, 010000 w,  ( andb a0@0+d1:w,d0 -- tst char rdy? )
  027400 w,            ( movl d0,sp@- )
  next,

0 Data? rdData?
1 Data? wrData?

code rdData  ( -- byte )  octal
  020170 w, hex 1d8 w, octal ( movl SCCRd,a0 )
  031072 w, ' port 2+ here - w, ( movw pc@port,d1 )
  070000 w,            ( moveq #0,d0 )
  010060 w, 010004 w,  ( movb a0@4+d1:w,d0 )
  027400 w,            ( movl d0,sp@- )
  next,

code wrData  ( byte -- )  octal
  020170 w, hex 1dc w, octal ( movl SCCWr,a0 )
  031072 w, ' port 2+ here - w, ( movw pc@port,d1 )
  020037 w,           ( movl sp@+,d0 )
  010600 w, 010004 w, ( movb d0,a0@4+d1:w )
  next,

hex

: wrCtl ( byte reg -- )   0bffff9 port @ + -base swap over c! c! ;

: rdMidi  ( -- byte )  begin rdData? until  rdData ;

: wrMidi ( byte -- )   begin wrData? until  wrData ;

: flushMidi  begin rdData? while rdData drop repeat ;

: reset-midi ( system back to normal; extern ints for mouse )
  modem port !
  1 1 wrCtl  ( enable ext int, modem )
  printer port !
  1 1 wrCtl  ( enable ext int, printer )
  0a 9 wrCtl ( master int enable )  ;

: setup-midi  ( setup using current midi-port )
  port @ if ( modem ) 82 else ( printer ) 42 endif
    9 wrCtl  ( channel reset )
  28 0b wrCtl  ( ext clock on TRxC )
  84 4 wrCtl   ( set clockdivide to 1MHz )
  0c1 3 wrCtl  ( rcv 8 bits, rcv enable )
  6a 5 wrCtl   ( trans 8 bits, tx enable, rts )
  8 0f wrCtl   ( all ext/stat but DCD disabled )
  10 0 wrCtl   ( reset ext/stat ints )
  reset-midi  ( set ext interrupts, master int enable )  ;

: =midi  ( port -- )  ( setup port as current, reset chans )
  port !  setup-midi  ;


