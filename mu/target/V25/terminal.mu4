( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2019 David Frech. (Read the LICENSE for details.)


( Simple terminal and serial expect/send code.)

( 2007-jan-15. Moved v25-specific goodies here from lib/terminal.mu4)
( 2002-mar-27. Converted to muforth.)

( Created 5-aug-1999.)

loading Terminal/v25

decimal

( Downloading initial image to target.)

( IDEA: Use this code to stream stuff to the v25 and have it show, on the
  screen, what it's returning. Or simply to consume all the text before or
  after a cmd.)

( Expect/send.)
: ><target  tty reads  tty writes  (  fd-target @ reads  fd-target @ writes)  ;
: |cr  #CR emit  ;

: ?prompt  ( ch)  begin  key  over = until  drop  ;

variable 'boot   rom-start "435 + 'boot !  ( XXX: just for fun)
( Execute!)
: pc!  ( n)   ." pc" .w16 |cr  ." gos" |cr ;


( Load the chat interactive stuff here.)
ld v25/chat-host.d4		( interactive debugging)


( Special keys.)

: |cr  #CR emit  ;
variable 'boot  ( filled in later!)

( These are ARM things. Leave here as examples.)
comment %%arm%%
esc: k  ( smokin')  115200 bps  0 ;
esc: f  ( fast)      57600 bps  0 ;
esc: s  ( slow)       9600 bps  0 ;

esc: d  ( download)      ." flashload " rom-start .w16  |cr  0 ;
esc: r  ( ram download)  ." download"  |cr  0 ;

esc: u  ( uuencode)  'image |#  uu  0 ;
esc: p  ( pc)  ." pc " 'boot @ .w16 |cr  0 ;
esc: g  ( go)  ." gos" ( |cr)  0 ;

esc: q  ( quit)  -1 ;
%%arm%%

( XXX Old v25 stuff. Fix!)

-:
   tty-target reads  tty-target writes  te-slow
   |cr-chat  char * ?prompt  " l" send  z" loader" "download  " g" send
   char g ?prompt  te-fast
   ( changes target serial speed - can't await prompt)  0  ;
                                   char l  term-esc-keys !  ( loader)
-:
   tty-target reads  tty-target writes
   |cr-chat  char * ?prompt  " l" send  z" image" "download
   initial-sync  0  ;
                                   char i  term-esc-keys !  ( image)
-:
   tty-target reads  tty-target writes
   |cr-chat  char * ?prompt  |boot @ pc!  " r" send  0  ;
                                   char b  term-esc-keys !  ( boot)
-:
   tty-target reads  tty-target writes
   |cr-chat  char * ?prompt  " g" send  <LF> ?prompt
   ( target responds "g CR LF")   chat!  -1 ( quit term)  ;
                                   char g  term-esc-keys !  ( go)

( 2002-mar-30. Comments. About reading prompts and so on. Make an 8 byte
  ring buffer that you copy the target responses into. Keep looping around
  and copying until the last 5 characters match "Boot:".

  Alternatively, use human intelligence combined with "macro" keystrokes.
  Read the prompt yourself, then type "M-d"; terminal sends "download<CR>";
  target responds; type "M-u" to uuencode and send; target responds. This
  is probably easier. And once we get something into Flash that can be a
  debugging stub we won't even need to do this anymore.)

00 .if

( Test code.)
: kb  raw  begin  key  dup <ESC> xor while  u.  repeat  cooked  ;
: wr  ( a #)  tty-target -rot write drop  ;
: kb-test
   if  tty keyboard-in 1 read   tty keyboard-in 1 write  2drop  then  ;

: kb    fds fd! drop  fds tty fd-set  raw
   begin  te-select drop  kb-test  again  [

.then

