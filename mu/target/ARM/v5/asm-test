( arm test procedures)

( 13 apr 1999. Switched things around to match the operand order of ARMasm.)

cr " Compiling test instructions: "  file[

outside

ram

meta-interpret

code
label |0

hex
." B/BL "
here b
here "10 + bl
0= not |if  here "30 + b
      |else here "40 + bl  |then

." ALU "
r3 r2 r1 and   ( r1 := r2 & r3)
23 # r2 r1 bic  ( r1 := r2 bic 23)
-1 # r1 mov     ( r1 := -1)
r2 r1 tst       ( cond := r1 & r2)
ff0000 # r2 r1 orr   ( r1 := r2 | ff0000)
0= not |if  3fffffc # r2 r1 bic s  |then
r3 2 lsl r2 r1 adc  ( r1 := r2 + [r3 lsl 2])
r4 r3 ror  r2  r1  sbc   ( r1 := r2 - [r4 ror r3] - carry + 1)
0= not |if  r6 rrx   r5  r4   eor |then
cs not |if  r4 #32 lsl  r3  r2  rsb  |then
> |if  r5 #32 lsr  r4  r3  sub  |then
< |if  r6 #32 asr  r5  r4  add  |then
0= |if  r7 #32 ror  r5  cmn  |then

." MRS/MSR "
r5 cpsr mvs
r5 cpsr_flg mvs
a0000000 # cpsr_flg mvs
cpsr r5 mvs
r5 spsr mvs
r5 spsr_flg mvs
a0000000 # spsr_flg mvs
spsr r5 mvs

." MUL/MLA "
r1 r2 r3 mul
r1 r2 r3 r4 mla
( r1 r1 r3 mul      ( barf)
( r1 r1 r3 r4 mla   ( barf)

." LDR/STR "
label foo  "55aa ,
label bar  "6699 ,
foo r1 ldr
bar r1 str
0 r2 ,) r1 ldr
4 r2 ), r1 ldr
r3 r2 ,) r1 ldr
r3 r2 ,)! r1 ldr
r3 r2 ), r1 ldr
-400 r2 ,)! r1 ldr
-400 r2 ), r1 ldr user byte
400 r2 ,) r1 ldr
-fff r2 ,) r1 ldr
\ comment %%  -1000 r2 ,) r1 ldr %%
fff r2 ,) r1 ldr
\ comment %%   1000 r2 ,) r1 ldr %%
r3 (-) r2 ), r1 ldr user
r3 (-) 4 ror r2 ,) r1 ldr byte

." LDM/STM "
{ r0 r3 to r6 r8 r10 to }^  sp !  ldm fd
{ r0 r3 to r6 r8 r10 to }^  sp !  ldm fa
{ r0 r3 to r6 r8 r10 to }^  sp !  ldm ea
{ r0 r3 to r6 r8 r10 to }^  sp !  ldm ed

{ r0 r3 to r6 r8 r10 to }^  sp !  stm fd
{ r0 r3 to r6 r8 r10 to }^  sp !  stm fa
{ r0 r3 to r6 r8 r10 to }^  sp !  stm ea
{ r0 r3 to r6 r8 r10 to }^  sp !  stm ed

{ r0 r3 to r6 r8 r10 to }^  sp !  ldm ia  ( 01)
{ r0 r3 to r6 r8 r10 to }^  sp !  ldm ib  ( 11)
{ r0 r3 to r6 r8 r10 to }^  sp !  ldm db  ( 10)
{ r0 r3 to r6 r8 r10 to }^  sp !  ldm da  ( 00)

{ r0 r3 to r6 r8 r10 to }^  sp !  stm ia  ( 01 11)
{ r0 r3 to r6 r8 r10 to }^  sp    stm ib  ( 11 10)
{ r0 r3 to r6 r8 r10 to }   sp    stm db  ( 10 00)
{ r0 r3 to r6 r8 r10 to }   sp !  stm da  ( 00 01)

." SWP "
r1 r2 r3 swp
r1 r2 r3 swp byte

." SWI "
00abcdef swi

." CDP "
#15 1 r2 r3 r4 cdp
#14 2 r3 r4 r5 0e cdp

comment %%
." LDC/STC "
#15 foo r1 ldc
#15 bar r1 stc
#15 -8 r1 ), r2 ldc

." MRC/MCR "
#15 0 r1 c2 c3 mrc
#15 0 r1 c2 c3 0e mcr %%
.s

c;

host

cr ." |here is "  |here u.

]file
