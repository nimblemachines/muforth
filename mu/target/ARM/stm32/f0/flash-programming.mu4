
| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2025 David Frech. (Read the LICENSE for details.)

loading STM32F0 and F3 flash programming

hex
__meta

label stm32-flash-unlock
   { x w } pop   FLASH_KEYR >fr w str
                 FLASH_KEYR >fr x str
   0 w movs      FLASH_CR   >fr w str  ( clear any program/erase bits)
   FLASH_SR >fr w ldr   FLASH_SR >fr w str  ( clear any error bits)
   lr bx  ;c

label stm32-flash-lock
   80 ( LOCK) w movs   FLASH_CR >fr w str
   lr bx  ;c

| Reference manual says we have to set PER *before* setting FLASH_AR, so we
| can't share as much code in stm32-flash-start-erase.

label stm32-flash-page-erase  ( flash-page-address)
   2 ( PER) w movs  ( page erase command)
   FLASH_CR >fr w str  ( set erase bits)
   { x } pop   FLASH_AR >fr x str  ( set page erase address)
   ( fall thru)  ;c

( Enter with erase bits in w.)
label stm32-flash-start-erase
   40 ( STRT) w w adds  FLASH_CR >fr w str  ( set STRT+<erase-bits>)
   ( fall thru)  ;c

( Wait until flash command finishes. Clobbers w.)
label -busy
   begin   FLASH_SR >fr w ldr   1 w w lsrs ( BSY -> Carry)  cc until
.ifdef testing
   w w w adds  | so we can see the result in testing mode
.then
   lr bx  ;c

label stm32-flash-mass-erase
   4 ( MER) w movs  ( mass erase command)
   FLASH_CR >fr w str  ( set erase bits)
   stm32-flash-start-erase b  ;c

| w is byte count, x is dest address, y is src address, z is offset.
| Program by halfwords.
label stm32-flash-program  ( buf a u)
   1 ( PG) w movs   FLASH_CR >fr w str  ( set PG bit)
   { y x w } pop
   { lr } push
   0 z movs  ( offset)   w cnt mov  ( save)
   begin
      ( program by halfwords!)
      z y w ldrh   z x w strh   2 z z adds
      -busy bl  ( clobbers w)
      cnt z cmp
   u>= until
   { pc } pop  ;c

.ifdef bogus-and-untested

( Option bytes, erasing and programming.)

label unlock-option-bytes
   { x w } pop   FLASH_OPTKEYR >fr w str
                 FLASH_OPTKEYR >fr x str
   lr bx  ;c
   pool,

label erase-option-bytes
   220 ( OPTWRE+OPTER) w lit
   FLASH_CR >fr w str  ( set erase bits)
   stm32-flash-start-erase b  ;c
   pool,

label remove-read-protect  ( key)
   lr rpush
   | unlock-option-bytes bl
   | erase-option-bytes bl
   210 ( OPTWRE+OPTPG) w lit   FLASH_CR w freg! ( set OPTPG)
   | Reference manual says to do a halfword write; complemented high byte
   | will be automagically generated.
   55aa w lit   OB_RDP x lit   0 x w strh
   | 0aa w movs   OB_RDP x lit   0 x w strh
   -busy bl
   pc rpop  ;c
   pool,

.then  ( bogus)
