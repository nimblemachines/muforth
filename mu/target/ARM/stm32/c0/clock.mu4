| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2025 David Frech. (Read the LICENSE for details.)

loading STM32C0 clock setting

hex
__meta

| Set a byte register to a value (set), then loop, reading the same
| register, until the register anded with a mask matches the match value.

: set-until-match  ( set mask match reg)
   >r  rot r@ c!  ( set reg to "set" value)
   begin  over r@ c@ and  over =  until  r>  drop drop drop ;

: sysclk!  ( clksrc)  3f  over 9 *  RCC_CFGR  set-until-match ;

: >hsi  0 ( SW=HSI) sysclk! ;
: >hse  1 ( SW=HSE) sysclk! ;

| On C0 parts, RCC_CR cannot be accessed by byte! So we can't use
| set-until-match to start the HSE.

: hse-start   ( hsebits)
   [ RCC_CR 2 + #] tuck  h!  ( turn on)
   begin  dup h@ 2 and 2 = until  drop ;

: +hse         1 ( HSEON)           hse-start ;
: +hse-bypass  5 ( HSEON + HSEBYP)  hse-start ;
