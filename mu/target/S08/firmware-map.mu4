( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2019 David Frech. (Read the LICENSE for details.)

( A map of the firmware loaded into my S08's - so I can keep it all
  straight. Using fslot just made things worse, not better. Having a single
  "catalog" in one place seems like the best approach.)

hex

( Since we might be using this while compiling/debugging code for a non-S08
  target - an AVR or PIC18, eg - assume that @flash and #flash will either
  be undefined, or will refer to the actual target's flash, not our debug
  interface's flash.

  Since I don't plan on using HC908 parts - which have odd flash origins -
  assume that we're using an S08 for a debug interface, and that its flash
  ends at "1_0000.)

( Start and the end of the S08's flash and work backwards.)
#64 Ki

200 - dup  constant @chat  ( NOTE: This is not a start address; it just
                             says what part of the flash the chat code
                             occupies)

200 - dup  constant @usb-debug  ( load USB and serial chat together; requires
                                  1 Ki; rarely used, so we let it overlap the
                                  BDM code)

200 - dup  constant @bdm   ( Even though the serial version fits into 512
                             bytes let's allocate 1 Ki so it's always in
                             the same place)

200 - dup  constant @avrprog    ( code to program AVR atmega chips over SPI)
200 - dup  constant @iic        ( test out i2c code)
200 - dup  constant @iic-chat   ( AVR chat over i2c)
200 - dup  constant @send-midi  ( support for sending simple MIDI commands)
200 - dup  constant @pic18prog  ( program PIC18 parts - totally unfinished)
200 - dup  constant @avrchat-serial  ( AVR chat over UART - unfinished)
drop
