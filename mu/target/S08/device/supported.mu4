| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2025 David Frech. (Read the LICENSE for details.)

loading S08 device support:

sealed .equates.    ( chip equates and other constants for target)

( First, a few defining words, which we'll use to load the "equates".)
: equ     ( offset)  current preserve  .equates. definitions  constant ;
: vector  ( offset)  equ ;
: reg     ( offset)  equ ;
: aka   .equates. chain' execute  equ ;  ( for making synonyms)

| Given what has been defined, either in a load file or on the command
| line, we load a file of device-specific "equates".

( First try the 908 derivatives.)

0  | matched flag; start out false - trying to avoid a million .else and .then

.ifdef 908QB4  ." 908QB4 "  ld target/S08/device/908QB4.mu4  1- .then
.ifdef 908QB8  ." 908QB8 "  ld target/S08/device/908QB8.mu4  1- .then

0= .if   | No match. Try the S08 flavours.

." S08"

0  | matched flag; start out false - trying to avoid a million .else and .then

.ifdef JM8   ." JM8"   ld target/S08/device/S08JM8.mu4   1- .then
.ifdef JM16  ." JM16"  ld target/S08/device/S08JM16.mu4  1- .then
.ifdef JM32  ." JM32"  ld target/S08/device/S08JM32.mu4  1- .then
.ifdef JM60  ." JM60"  ld target/S08/device/S08JM60.mu4  1- .then
.ifdef JS8   ." JS8"   ld target/S08/device/S08JS8.mu4   1- .then
.ifdef JS16  ." JS16"  ld target/S08/device/S08JS16.mu4  1- .then
.ifdef QE4   ." QE4"   ld target/S08/device/S08QE4.mu4   1- .then
.ifdef QE8   ." QE8"   ld target/S08/device/S08QE8.mu4   1- .then
.ifdef QE16  ." QE16"  ld target/S08/device/S08QE16.mu4  1- .then
.ifdef QE32  ." QE32"  ld target/S08/device/S08QE32.mu4  1- .then
.ifdef QG4   ." QG4"   ld target/S08/device/S08QG4.mu4   1- .then
.ifdef QG8   ." QG8"   ld target/S08/device/S08QG8.mu4   1- .then

0= .if   | no device specified; default to connected device

hex

.ifdef usb-js-bootloader ." S08JS16 (bootloader detected)"  ld target/S08/device/S08JS16.mu4  .then

.ifdef usb-target
   | Connect and read device id.
   0c0 00 1806 0 2 pad  usb-target  usb-control  drop
   | High nybble of device-id is "reserved" and might not be zero.
   pad beh@  0fff and  constant device-id
.then

.ifdef serial-target
   | Connect and read device id.
   cx.device-id  constant device-id
.then

.ifdef device-id
   device-id
   dup 009 = .if ." QG8"   ld target/S08/device/S08QG8.mu4   .then
   dup 016 = .if ." JM60"  ld target/S08/device/S08JM60.mu4  .then
   dup 01c = .if ." QE8"   ld target/S08/device/S08QE8.mu4   .then
   dup 01e = .if ." JM16"  ld target/S08/device/S08JM16.mu4  .then
   dup 01f = .if ." QE32"  ld target/S08/device/S08QE32.mu4  .then
   dup 024 = .if ." JS16"  ld target/S08/device/S08JS16.mu4  .then
   drop
      ."  (connected device)"

.else
   | No connected device. Default to QE32 just so we can load the rest of
   | build.
   ." QE32 (default device)"  ld target/S08/device/S08QE32.mu4
.then

.then  ( default to connected device)
.then  ( S08)
space
