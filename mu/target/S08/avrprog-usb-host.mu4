| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2024 David Frech. (Read the LICENSE for details.)

loading SPI over USB (AVR programming support) (host)

| Host-side code to drive the AVR programmer code in
| target/S08/avrprog-usb-core.mu4.

hex

| : usb  ( bmRequest bRequest wValue wIndex wLength 'buffer)

| Since we're using wValue and wIndex to pass an array of four bytes, we
| need an easy way to assemble the two word values - little-endian! - from
| the avr-cmd, addr, and data.

: >setup   ( avr-cmd addr data - wValue wIndex)
   push  >hilo  push  ( avr-cmd addr-hi)  lohi>  ( wValue)
   pop pop  ( addr-lo data)  lohi>  ( wIndex) ;

( Commands)
: avr.Read    ( avr-cmd addr data)  >setup 2push
               0c0 20   2pop    4 pad   usb ;

: avr.Write   ( avr-cmd addr data)  >setup 2push
                40 20   2pop    0 0     usb ;

: avr.BulkRead   ( avr-cmd addr toggle buf len)  2push  >setup 2push
               0c0 21   2pop   pop pop  usb ;

: avr.BulkWrite  ( avr-cmd addr toggle buf len)  2push  >setup 2push
                40 22   2pop   pop pop  usb ;

: control-write
   create ,  ( bRequest)
   does> @   40 swap  0 0 0 0  usb ;

00  control-write  avr.Bye  ( End session, return to chat command loop)
23  control-write  avr.ResetLow
24  control-write  avr.ResetHigh
25  control-write  avr.SlowClock  ( 250k)
26  control-write  avr.FastClock  ( 2M)

: avr.Hello  ( start the AVR programming firmware on the connected device)
.ifdef in-ram
   0112 u.SetPC u.Run  ( run from ram - loads right after flash routine)
.else
   @avrprog u.SetPC u.Run
.then ;
