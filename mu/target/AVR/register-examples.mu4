| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2024 David Frech. (Read the LICENSE for details.)

loading AVR register context example code

__meta
hex

| XXX using @ ! etc makes it impossible to put values into .W and .X! Do I
| rename @ to fetch, etc? Or create words for storing values into the regs,
| like w! and x! ?

( Treat w like top: fetch into w from the address in w)
label @    w z movw  z+ wl ld  z+ wh ld   ret  ;c
label c@   w z movw  z+ wl ld     wh clr  ret  ;c

( w has address, x has value)
label !    w z movw  z+ xl st  z+ xh st  ret  ;c
label c!   w z movw  z+ xl st            ret  ;c

( Add w + x, store in w)
label +     xl wl add  xh wh adc  ret  ;c

( And w and x, store in w)
label and   xl wl and  xh wh and  ret  ;c

| Just for fun, and to see how the SREG bits reflect the answer. Also,
| let's use h1 as a helper so we can see the results in the register
| display.
|
| negate - which can be cascaded to more than 16 bits - and negate-alt -
| which can't - should yield the same result.

( Negate the value in w.)
label negate
   wl neg  h1 clr  wh h1 sbc  h1 wh mov  ret  ;c

( Negate the value in w.)
label negate-alt
   wh neg  wl neg  0 wh sbci  ret  ;c
