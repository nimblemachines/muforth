| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2024 David Frech. (Read the LICENSE for details.)

loading AVR EEPROM reading and writing

__meta

( Address in zh/zl; data to xl; clobbers xh)
label read-eeprom-byte
   EEARH zh out  EEARL zl out  ( set read address)
   0 ( EERE) EECR sbi  ( set EEPROM read enable bit)  EEDR xl in
   ret  ;c

| NOTE: No more than 4 clock cycles can elapse between setting EEMPE and
| setting EEPE. Therefore those two instructions have to be executed with
| interrupts disabled.

( Address in zh/zl; data from xl; clobbers xh)
label write-eeprom-byte
   EEARH zh out  EEARL zl out  ( set write address)
   EEDR xl out  ( set write data)
   SREG xh in  ( save interrupt state)  cli
      4 xl ldi  EECR xl out  ( erase+write; set EEMPE - master write enable)
      1 ( EEPE) EECR sbi  ( set EEPROM write enable)
   SREG xh out  ( reset interrupt state)
   begin  1 ( EEPE) EECR sbic  again  ( wait for write to complete)
   ret  ;c
