| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2025 David Frech. (Read the LICENSE for details.)

loading MSP430 memory image

( MSP430s are little-endian.)
-d little-endian
-d target-comma-aligns

ld target/common/memory-von-neumann-16.mu4

| For the MSP430 we need more than the default flash and ram regions, so
| let's start by getting a pointer to the memory image. It doesn't matter
| if we use ram or flash; there is only *one* image.
ram 'image

dup make-region info       | this is currently UNUSED

| Since the boot page is made up of several pieces, let's make each piece
| its own region. wipe, below, will set reasonable origins for these.

dup make-region boot       | the bulk of the boot/chat code
dup make-region vectors    | up to 64 bytes of vectors
drop

( Initialization and memory layout.)

( XXX This is for main memory. Do we want to treat info memory separately?)
512 constant /page   ( this is the erase size of main memory)

( Target address of first byte of the flash page containing the vectors.)
"1_0000  /page -  constant @vector-page

| Each device's datasheet specifies the address of the first (lowest in
| memory) vector. We have already defined this as @vectors. Since the
| vectors go from @vectors to "1_0000 we can calculate the size of the
| vector table.

"1_0000 @vectors -  constant #vectors

: wipe
     flash    @flash  region!
      boot     @boot  region!
   vectors  @vectors  region!
      info     @info  region!
       ram      @ram  region!

        0 image+ #image  00 fill    | zero entire image (including info and flash)
   @flash image+ #flash "ff fill ;  | erase flash to ff

( Erase image memory and default to ram region.)
wipe
