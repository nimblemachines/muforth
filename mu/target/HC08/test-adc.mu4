( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2018 David Frech. (Read the LICENSE for details.)

( Code to test the ADC subsystem, by reading temperature and bandgap
  values.)

__meta

hex

ram

label adc-enable-bandgap
   SPMSC1 ) lda  01 # ora ( BGBE)  SPMSC1 ) sta  rts  ;c

label port-init
   0ff # lda  PTAPE ) sta  ( set pullups on all pins)

   ( If a chip has a pullup register for a port, set the pullups.)
   .reg PTBPE .if  PTBPE ) sta  .then
   .reg PTCPE .if  PTCPE ) sta  .then
   .reg PTDPE .if  PTDPE ) sta  .then
   .reg PTEPE .if  PTEPE ) sta  .then
   .reg PTFPE .if  PTFPE ) sta  .then
   .reg PTGPE .if  PTGPE ) sta  .then
   rts  ;c

( Enter with ADC channel number in low 5 bits of A; exit with ADC value in
  HX.)

label adc-read-channel
   ADCSC1 ) sta  ( Set channel and start conversion)
   begin  ADCSC1 7 ( COCO) bset?  until  ( loop until conversion completes)
   ADCRH ) ldhx  ( read ADCRH into H, ADCRL into X)  rts  ;c

label adc-init
   -- port-init c  ( seems to cause trouble - do we need this?)
   adc-enable-bandgap c
   %1001_0111 # ADCCFG ) mov  ( 12 bits; use asynch clock)
   -- %1001_1011 # ADCCFG ) mov  ( 10 bits; use asynch clock)
   rts  ;c

label read-temp
   #26 # lda  ( temp channel)  adc-read-channel j  ;c

label read-bandgap
   #27 # lda  ( bandgap channel)  adc-read-channel j  ;c


( Now that we can read the chip, lets convert ADC values to temperature.)

__host  ( same as doing { )

decimal
( These two routine take temperature in milli-degrees.)
: C>F  ( celsius - fahrenheit)            9 5 */  32,000 +  ;
: F>C  ( fahrenheit - celsius)  32,000 -  5 9 */ ;

       12 constant adc-bits ( adjust to your chip)
          variable Vrail    ( Vdd voltage in uV - change this for your setup)
3,300,000          Vrail !  ( but we can use bandgap to trim this!)
1,170,000 constant Vgap     ( bandgap voltage in uV - change this for your setup)
  701,200 constant Vtemp25  ( uV reading at 25C)
    1,646 constant m-cold   ( cold slope: mV/degree C)
    1,769 constant m-hot    (  hot slope: mV/degree C)

comment Formulas!!

Basic conversion formulas. NOTE: all temp values are in Celsius.

  temp = 25 - ((Vtemp - Vtemp25) / m_cold)  if Vtemp > Vtemp25
  temp = 25 - ((Vtemp - Vtemp25) / m_hot)   if Vtemp < Vtemp25

What about Vtemp?

  Vtemp = rail * ADCtemp / resolution  ( uV)

where

  ADCtemp  is the raw data read from the ADC (0 to resolution-1)
  resolution is 2^adc-bits  (ie, 256 for  8 bit
                                1024 for 10 bit
                                4096 for 12 bit)
Formulas!!


: adc>V      ( adc     - V)       Vrail @  swap  1 adc-bits <<       */ ;
: gap>Vrail  ( bandgap - Vrail)   Vgap           1 adc-bits <<  rot  */ ;

: slope  ( Vtemp - slope)
   Vtemp25 u< if  m-hot  ( hot slope)  ^ then
                 m-cold  ( cold slope) ;

: temp   ( adc-temp - mC)
   adc>V  dup Vtemp25 -  1000 rot slope  */  25,000 swap - ;

__meta
