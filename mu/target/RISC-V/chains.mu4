( This file is part of muforth: https://muforth.nimblemachines.com/

  Copyright 2002-2019 David Frech. (Read the LICENSE for details.)

loading RISC-V meta-compiler (target-specific chains)

forth  decimal

( Metacompiler vocabulary chains.)

( Since we are now "chaining" chains together, let's do this bottom-up.

  .equates. contains chip equates and any other constants that should be
  visible to both the assembler and target compiler. When used interactively,
  or in the assembler, these push their value. When used in a target colon
  word, these compile literals.

  .csr. contains definitions only of the CSRs. They are in a separate chain
  so that it is possible for the disassembler to map from an address of a CSR
  to its name. If we put them in with the other equates we would never know
  if we found a CSR or something else with the same value.

  However, to make this less annoying for authors of token consumers - like
  those that follow in this file - we chain .equates. to .csr. so that we can
  search *both* by searching .equates. However, when the disassembler looks
  for its match, it can start at the head of the .csr. and will only see
  those. So we get both ease and precision.

  .assembler. contains definitions of instructions, registers, addressing
  modes, and words to build control structures. It is searched when
  building code words, and also when compiling macros.

  Simple, right? ;-)

          sealed .csr.        ( definitions of CSRs)
     .csr. chain .equates.    ( chip equates and other constants for target)
          sealed .assembler.  ( the host-resident target assembler)
