| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2024 David Frech. (Read the LICENSE for details.)

loading Serial expect/send

( Simple target serial expect/send code.)

defer target-tty

( Modify termios settings of target-tty device.)
: target-termios   create  ( cfa)  ,  does> @  target-tty  modify-termios ;

( Set up raw mode tailored for target interaction.)
' set-termios-target-raw      target-termios target-raw

' set-termios-speed           target-termios bps  ( speed)
' set-termios-ignore-parity   target-termios ignore-parity
' set-termios-even-parity     target-termios even-parity
' set-termios-odd-parity      target-termios odd-parity

: lazy-target-tty  ( - fd)
   create  0 , ( fd)  token, drop ( filename)  does>
   dup @  =if nip ^ then ( already opened!)  drop
   dup cell+ cell+ ( skip fd and string count)  open-file-rw  ( a fd)
   dup rot ( fd fd a)  !  target-raw  ( fd) ;

| serial-target and serial-target2 should be symlinks to
| /dev/tty<something> devices

lazy-target-tty  std-target-tty serial-target
lazy-target-tty  alt-target-tty serial-target2

( Abbrevs)
: std-target   now std-target-tty is target-tty ;  std-target
: alt-target   now alt-target-tty is target-tty ;

( Recv from, send to target.)
: _send  target-tty  >emit ;
: _recv  target-tty  <key ;

| flush throws away bytes in the input queue; drain waits until all bytes
| in the output queue have been transmitted.

: flush  target-tty  tty-iflush ;
: drain  target-tty  tty-drain ;

( Spying on the protocol.)
variable spy  spy off
: send          spy @ if ." >"  dup .h8_ then  _send ;
: recv   _recv  spy @ if ." <"  dup .h8_ then ;

| To make spying on the protocol easier to deal with, break up the printed
| bytes into "packets" in a semantically meaningful way. How about this
| stupid name, which is easy to remember:

: ?spkt  ( spy packet, or "spiked")  spy @ if  cr  then ;

| Wait for target command loop to announce itself, and compare to what we
| expect. This has only ever been used to identify firmware running on a
| serially-connected S08 device.

: await  ( a u)
   m preserve
   swap m !  for  m* recv  xor if  error" Wrong firmware"  then  next ;
