| This file is part of muforth: https://muforth.dev/
|
| Copyright 2002-2025 David Frech. (Read the LICENSE for details.)

| -------------------------------------------------------------------------
| Peephole optimizer tags
| -------------------------------------------------------------------------

| Tags tell the meta-compiler what kind of special code, if any, was just
| compiled. Currently used to identify literals and calls, for simple
| peephole optimizations.
|
| We store the tag byte at \m here. The absence of a tag is represented by
| an "empty" image byte - 0ff - *not* by a tag of zero.
|
| Note that we leave it up to consumers of this code to define their own
| tags and instruction-rewriting mechanisms.

| Store tag byte.
: tag!  ( tag)     \m here image-c! ;

| Fetch tag byte.
: tag@  ( - tag)   \m here image-c@ ;

| Set tag byte to the "empty" state.
: untag   "ff tag! ;

| Sometimes we will need to "uncompile" previously-compiled code. Instead
| of simply backing up and leaving the cruft - instructions and tags
| - behind, let's back up and overwrite the code and tags with empty space
| (0ff).

: uncompile  ( #bytes)
   \m here  over -  dup \m goto image+  swap ( #bytes)  1+ ( include tag)  "ff fill ;
